---
- name: Deploy React App Front-end Build
  connection: ssh
  gather_facts: false
  hosts: all
  vars:
    repo_folder: /home/ubuntu/docker_deployment
    github_username: gbourniq
    repo_name: sample_app_for_ansible
    github_pwd: !vault |
            $ANSIBLE_VAULT;1.2;AES256;user
            38303838313263323335336333386334323535393639376165356566356164626132386431313836
            3961363030646162323137313564656431666665366530660a363934306538386537376466396564
            39333134396337336564653234616230633863326362393365653035316364366539396361336365
            3435363830393133650a666262363264343965636664353331363831313664353365613066353166
            3066

  # tasks, indented under playbook name
  tasks:

    - name: Install Python
      apt:
        name: ['python3', 'python3-pip']
        update_cache: true
        state: present

    - name: Install pip packages
      pip:
        name:
          - docker
          - docker-compose

    - name: Deleting repo folder if exists
      file:
        path: "{{ repo_folder }}"
        state: absent

    - name: Create a docker_deployment directory if it does not exist
      file:
        path: "{{ repo_folder }}"
        state: directory
        mode: '0755'

    - name: Recursively change ownership of a directory
      file:
        path: "{{ repo_folder }}"
        state: directory
        recurse: yes
        owner: ubuntu
        group: ubuntu

    - name: Clone github repo
      become: no
      git:
        repo: https://{{ github_username }}:{{ github_pwd }}@github.com/{{ github_username }}/{{ repo_name }}.git
        version: master
        dest: "{{ repo_folder }}"
        update: yes

    # - name: Deleting cloned repo
    #   file:
    #     path: "{{ repo_folder }}"
    #     state: absent

    # - debug:
    #   msg: "docker info {{ github_pwd }}"


      
    - name: Add Docker repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        update_cache: no

    - name: Add apt key by id from a keyserver
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 7EA0A9C3F273FCD8

    - name: Install Docker-CE
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
        update_cache: true
        state: present

    - name: Add the user to the docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    # - name: Log into DockerHub
    #   docker_login:
    #     username: "{{ dockerhub_user }}"
    #     password: "{{ dockerhub_password }}"

    # - name: docker-compose build
    #   register: result
    #   delay: 5
    #   docker_compose:
    #     project_src: "{{ repo_folder }}"
    #     state: absent

    - name: Check docker
      command: echo $(docker info)

    # - name: docker-compose up
    #   docker_compose:
    #     project_src: "{{ repo_folder }}"
    #     pull: yes
    #     state: present

# end of Playbook